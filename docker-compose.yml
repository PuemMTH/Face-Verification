services:
  rabbitmq:
    container_name: rabbitmq-server
    image: rabbitmq:3-management
    ports:
      - "5672:5672"  # AMQP protocol port
      - "15672:15672"  # Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: ipu_user
      RABBITMQ_DEFAULT_PASS: ipu_password
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  producer_service:
    container_name: api-producer
    build:
      context: ./producer_service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    volumes:
      - ./backup/uploads:/app/uploads
    environment:
      - API_HOST=http://localhost:8085/api/v1
      - BASEURL_STATIC=http://localhost:8085/uploads
      - API_PORT=8085
      - RABBITMQ_HOST=rabbitmq-server
      - RABBITMQ_USER=ipu_user
      - RABBITMQ_PASSWORD=ipu_password
      - RABBITMQ_PORT=5672
      - RABBITMQ_QUEUE=face_verification_queue
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  customer_service:
    container_name: customer-service
    build:
      context: ./customer_service
      dockerfile: Dockerfile
    volumes:
      - ./backup/uploads:/app/uploads
    environment:
      - RABBITMQ_HOST=rabbitmq-server
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=ipu_user
      - RABBITMQ_PASSWORD=ipu_password
      - RABBITMQ_QUEUE=face_verification_queue
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped

  web_service:
    container_name: web-service
    build:
      context: ./web_service
      dockerfile: Dockerfile
    ports:
      - "8084:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8085/api/v1
    depends_on:
      - producer_service
    restart: unless-stopped

volumes:
  uploads:
  models:
  backup: